name: Gradle Build and Release

on:
  push:
    branches:
      - main
      - release/*
  pull_request:
    branches:
      - main

env:
  GRADLE_USER_HOME: ${{ github.workspace }}/.gradle
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: ~/.gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Set Gradle user home
        run: echo "GRADLE_USER_HOME=${{ github.workspace }}/.gradle" >> $GITHUB_ENV
      - name: Display Gradle version
        run: ./gradlew -v
      - name: Clean, build and check
        run: ./gradlew clean build check
      - name: Publish
        run: ./gradlew publish

  create-release:
    runs-on: ubuntu-latest
    needs: build-and-publish
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Git configuration
        run: |
          git fetch origin
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git remote set-url origin "https://oauth2:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git"
      - name: Display project version
        run: ./gradlew cV
      - name: Create Release Branch
        run: |
          if [ "${{ github.event_name }}" == "push" ] && [[ "${{ github.ref }}" == "refs/heads/master" ]]; then
            ./gradlew release -Prelease.disableChecks -Prelease.pushTagsOnly -Prelease.versionIncrementer=${{ github.event.inputs.RELEASE_TYPE }}
            if [ "${{ github.event.inputs.RELEASE_TYPE }}" != "incrementPatch" ]; then
              ./gradlew createReleaseBranch
            fi
            ./gradlew publish
          fi

  manual-release:
    runs-on: ubuntu-latest
    needs: build-and-publish
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Release creation step (manual)
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "Release process triggered manually."
            ./gradlew release -Prelease.disableChecks -Prelease.pushTagsOnly -Prelease.versionIncrementer=${{ github.event.inputs.RELEASE_TYPE }}
          fi
